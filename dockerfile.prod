#Dependencias
FROM node:21-alpine3.19 as deps

WORKDIR /usr/src/app

COPY package.json ./
COPY package-lock.json ./

RUN npm install



# Builder - Construye la aplicacion
FROM node:21-alpine3.19 as build

ARG ORDER_DATABASE_URL
ENV DATABASE_URL=$ORDER_DATABASE_URL

RUN echo "database_URL ::: $ORDER_DATABASE_URL"

WORKDIR /usr/src/app

#Copiar de deps los modulos de node

COPY --from=deps /usr/src/app/node_modules ./node_modules

#Copiar todo el codigo fuente que no este el dockerignore
COPY . .



RUN npx prisma migrate deploy
RUN npx prisma generate

#RUN npm run test
RUN npm run build

# Solo dependencias de production
RUN npm ci -f --omit=dev && npm cache clean --force



# Crear la imagen final de docker
FROM node:21-alpine3.19 as prod

WORKDIR /usr/src/app

COPY --from=build /usr/src/app/node_modules ./node_modules

#Copiar la carpeta de dist
COPY --from=build /usr/src/app/dist ./dist
COPY --from=build /usr/src/app/prisma ./prisma

ENV NODE_ENV=production

USER node

EXPOSE 3000

CMD [ "node", "dist/main.js" ]